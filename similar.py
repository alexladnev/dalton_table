import random

def gggggg(n, k, prob):
    A = [0] * (k + 1)
    B = [0] * (k + 1)
    C = [0] * (k + 1)
    D = [0] * (k + 1)
    E = [0] * (k + 1)
    U = [0] * (k + 1)
    O = [0] * (k + 1)
    V = [0] * (k + 1)
    N = [0] * (k + 1)
    M = [0] * (k + 1)
    X = [0] * (k + 1)
    Y = [0] * (k + 1)
    Z = [0] * (k + 1)
    j = 0
    i = 1
    l = 0
    p = 0
    result = []
    if n == 1:
        a = prob
        A[0] = a * 1000000
        while p < k:
            f = random.randint(0, 1000000)
            if f < A[0] and f >= 0:
                B[0] = B[0] + 1

            else:
                B[1] = B[1] + 1

            p = p + 1
        result.append(B[0])
        result.append(B[1])

    elif n == 2:
        while j < 3:
            A[j] = prob
            C[j] = 1 - A[j]
            j += 1

        B[0] = A[0] * A[1]
        B[1] = A[0] * C[1] + A[2] * C[0]
        B[2] = C[0] * C[2]
        D[0] = B[0] * 1000000
        while i < n + 1:
            D[i] = B[i] * 1000000 + D[i - 1]
            i = i + 1
        while l < k:
            f = random.randint(0, 1000000)
            if f < D[0] and f >= 0:
                E[0] = E[0] + 1

            elif f < D[1] and f >= D[0]:
                E[1] = E[1] + 1

            elif f <= D[2] and f >= D[1]:
                E[2] = E[2] + 1
            l = l + 1
        while p < n + 1:
            result.append(E[p])
            p = p + 1

    elif n == 3:
        while j < 6:
            A[j] = prob
            C[j] = 1 - A[j]
            j = j + 1

        B[0] = A[0] * A[1]
        B[1] = A[0] * C[1] + A[2] * C[0]
        B[2] = C[0] * C[2]
        X[0] = B[0] * A[3]
        X[1] = B[0] * C[3] + B[1] * A[4]
        X[2] = B[1] * C[4] + B[2] * A[5]
        X[3] = B[2] * C[5]
        D[0] = X[0] * 1000000

        while i < n + 1:
            D[i] = X[i] * 1000000 + D[i - 1]
            i = i + 1

        while l < k:
            f = random.randint(0, 1000000)
            if f < D[0] and f >= 0:
                E[0] = E[0] + 1

            elif f < D[1] and f >= D[0]:
                E[1] = E[1] + 1

            elif f < D[2] and f >= D[1]:
                E[2] = E[2] + 1

            elif f <= D[3] and f >= D[2]:
                E[3] = E[3] + 1
            l = l + 1

        while p < n + 1:
            result.append(E[p])
            p = p + 1

    elif n == 4:
        while j < 10:
            A[j] = prob
            C[j] = 1 - A[j]
            j = j + 1

        B[0] = A[0] * A[1]
        B[1] = A[0] * C[1] + A[2] * C[0]
        B[2] = C[0] * C[2]
        X[0] = B[0] * A[3]
        X[1] = B[0] * C[3] + B[1] * A[4]
        X[2] = B[1] * C[4] + B[2] * A[5]
        X[3] = B[2] * C[5]
        Y[0] = X[0] * A[6]
        Y[1] = X[0] * C[6] + X[1] * A[7]
        Y[2] = X[1] * C[7] + X[2] * A[8]
        Y[3] = X[2] * C[8] + X[3] * A[9]
        Y[4] = X[3] * C[9]
        D[0] = Y[0] * 1000000

        while i < n + 1:
            D[i] = Y[i] * 1000000 + D[i - 1]
            i = i + 1

        while l < k:
            f = random.randint(0, 1000000)
            if f < D[0] and f >= 0:
                E[0] = E[0] + 1

            elif f < D[1] and f >= D[0]:
                E[1] = E[1] + 1

            elif f < D[2] and f >= D[1]:
                E[2] = E[2] + 1

            elif f < D[3] and f >= D[2]:
                E[3] = E[3] + 1

            elif f <= D[4] and f >= D[3]:
                E[4] = E[4] + 1
            l = l + 1

        while p < n + 1:
            result.append(E[p])
            p = p + 1

    elif n == 5:
        while j < 15:
            A[j] = prob
            C[j] = 1 - A[j]
            j = j + 1

        B[0] = A[0] * A[1]
        B[1] = A[0] * C[1] + A[2] * C[0]
        B[2] = C[0] * C[2]
        X[0] = B[0] * A[3]
        X[1] = B[0] * C[3] + B[1] * A[4]
        X[2] = B[1] * C[4] + B[2] * A[5]
        X[3] = B[2] * C[5]
        Y[0] = X[0] * A[6]
        Y[1] = X[0] * C[6] + X[1] * A[7]
        Y[2] = X[1] * C[7] + X[2] * A[8]
        Y[3] = X[2] * C[8] + X[3] * A[9]
        Y[4] = X[3] * C[9]
        Z[0] = Y[0] * A[10]
        Z[1] = Y[0] * C[10] + Y[1] * A[11]
        Z[2] = Y[1] * C[11] + Y[2] * A[12]
        Z[3] = Y[2] * C[12] + Y[3] * A[13]
        Z[4] = Y[3] * C[13] + Y[4] * A[14]
        Z[5] = Y[4] * C[14]
        D[0] = Z[0] * 1000000

        while i < n + 1:
            D[i] = Z[i] * 1000000 + D[i - 1]
            i = i + 1
        while l < k:
            f = random.randint(0, 1000000)
            if f < D[0] and f >= 0:
                E[0] = E[0] + 1

            elif f < D[1] and f >= D[0]:
                E[1] = E[1] + 1

            elif f < D[2] and f >= D[1]:
                E[2] = E[2] + 1

            elif f < D[3] and f >= D[2]:
                E[3] = E[3] + 1

            elif f < D[4] and f >= D[3]:
                E[4] = E[4] + 1

            elif f <= D[5] and f >= D[4]:
                E[5] = E[5] + 1
            l = l + 1

        while p < n + 1:
            result.append(E[p])
            p = p + 1

    elif n == 6:
        while j < 21:
            A[j] = prob
            C[j] = 1 - A[j]
            j = j + 1

        B[0] = A[0] * A[1]
        B[1] = A[0] * C[1] + A[2] * C[0]
        B[2] = C[0] * C[2]
        X[0] = B[0] * A[3]
        X[1] = B[0] * C[3] + B[1] * A[4]
        X[2] = B[1] * C[4] + B[2] * A[5]
        X[3] = B[2] * C[5]
        Y[0] = X[0] * A[6]
        Y[1] = X[0] * C[6] + X[1] * A[7]
        Y[2] = X[1] * C[7] + X[2] * A[8]
        Y[3] = X[2] * C[8] + X[3] * A[9]
        Y[4] = X[3] * C[9]
        Z[0] = Y[0] * A[10]
        Z[1] = Y[0] * C[10] + Y[1] * A[11]
        Z[2] = Y[1] * C[11] + Y[2] * A[12]
        Z[3] = Y[2] * C[12] + Y[3] * A[13]
        Z[4] = Y[3] * C[13] + Y[4] * A[14]
        Z[5] = Y[4] * C[14]
        U[0] = Z[0] * A[15]
        U[1] = Z[0] * C[15] + Z[1] * A[16]
        U[2] = Z[1] * C[16] + Z[2] * A[17]
        U[3] = Z[2] * C[17] + Z[3] * A[18]
        U[4] = Z[3] * C[18] + Z[4] * A[19]
        U[5] = Z[4] * C[19] + Z[5] * A[20]
        U[6] = Z[5] * C[20]
        D[0] = U[0] * 1000000;

        while i < n + 1:
            D[i] = U[i] * 1000000 + D[i - 1]
            i = i + 1

        while l < k:
            f = random.randint(0, 1000000)
            if f < D[0] and f >= 0:
                E[0] = E[0] + 1

            elif f < D[1] and f >= D[0]:
                E[1] = E[1] + 1

            elif f < D[2] and f >= D[1]:
                E[2] = E[2] + 1

            elif f < D[3] and f >= D[2]:
                E[3] = E[3] + 1

            elif f < D[4] and f >= D[3]:
                E[4] = E[4] + 1

            elif f < D[5] and f >= D[4]:
                E[5] = E[5] + 1

            elif f <= D[6] and f >= D[5]:
                E[6] = E[6] + 1
            l = l + 1

        while p < n + 1:
            result.append(E[p])
            p = p + 1

    elif n == 7:
        while j < 28:
            A[j] = prob
            C[j] = 1 - A[j]
            j = j + 1

        B[0] = A[0] * A[1]
        B[1] = A[0] * C[1] + A[2] * C[0]
        B[2] = C[0] * C[2]
        X[0] = B[0] * A[3]
        X[1] = B[0] * C[3] + B[1] * A[4]
        X[2] = B[1] * C[4] + B[2] * A[5]
        X[3] = B[2] * C[5]
        Y[0] = X[0] * A[6]
        Y[1] = X[0] * C[6] + X[1] * A[7]
        Y[2] = X[1] * C[7] + X[2] * A[8]
        Y[3] = X[2] * C[8] + X[3] * A[9]
        Y[4] = X[3] * C[9]
        Z[0] = Y[0] * A[10]
        Z[1] = Y[0] * C[10] + Y[1] * A[11]
        Z[2] = Y[1] * C[11] + Y[2] * A[12]
        Z[3] = Y[2] * C[12] + Y[3] * A[13]
        Z[4] = Y[3] * C[13] + Y[4] * A[14]
        Z[5] = Y[4] * C[14]
        U[0] = Z[0] * A[15]
        U[1] = Z[0] * C[15] + Z[1] * A[16]
        U[2] = Z[1] * C[16] + Z[2] * A[17]
        U[3] = Z[2] * C[17] + Z[3] * A[18]
        U[4] = Z[3] * C[18] + Z[4] * A[19]
        U[5] = Z[4] * C[19] + Z[5] * A[20]
        U[6] = Z[5] * C[20]
        O[0] = U[0] * A[21]
        O[1] = U[0] * C[21] + U[1] * A[22]
        O[2] = U[1] * C[22] + U[2] * A[23]
        O[3] = U[2] * C[23] + U[3] * A[24]
        O[4] = U[3] * C[24] + U[4] * A[25]
        O[5] = U[4] * C[25] + U[5] * A[26]
        O[6] = U[5] * C[26] + U[6] * A[27]
        O[7] = U[6] * C[27]
        D[0] = O[0] * 1000000

        while i < n + 1:
            D[i] = O[i] * 1000000 + D[i - 1]
            i = i + 1

        while l < k:
            f = random.randint(0, 1000000)
            if f < D[0] and f >= 0:
                E[0] = E[0] + 1

            elif f < D[1] and f >= D[0]:
                E[1] = E[1] + 1

            elif f < D[2] and f >= D[1]:
                E[2] = E[2] + 1

            elif f < D[3] and f >= D[2]:
                E[3] = E[3] + 1

            elif f < D[4] and f >= D[3]:
                E[4] = E[4] + 1

            elif f < D[5] and f >= D[4]:
                E[5] = E[5] + 1

            elif f < D[6] and f >= D[5]:
                E[6] = E[6] + 1

            elif f <= D[7] and f >= D[6]:
                E[7] = E[7] + 1
            l = l + 1

        while p < n + 1:
            result.append(E[p])
            p = p + 1

    elif n == 8:
        while j < 36:
            A[j] = prob
            C[j] = 1 - A[j]
            j = j + 1

        B[0] = A[0] * A[1]
        B[1] = A[0] * C[1] + A[2] * C[0]
        B[2] = C[0] * C[2]
        X[0] = B[0] * A[3]
        X[1] = B[0] * C[3] + B[1] * A[4]
        X[2] = B[1] * C[4] + B[2] * A[5]
        X[3] = B[2] * C[5]
        Y[0] = X[0] * A[6]
        Y[1] = X[0] * C[6] + X[1] * A[7]
        Y[2] = X[1] * C[7] + X[2] * A[8]
        Y[3] = X[2] * C[8] + X[3] * A[9]
        Y[4] = X[3] * C[9]
        Z[0] = Y[0] * A[10]
        Z[1] = Y[0] * C[10] + Y[1] * A[11]
        Z[2] = Y[1] * C[11] + Y[2] * A[12]
        Z[3] = Y[2] * C[12] + Y[3] * A[13]
        Z[4] = Y[3] * C[13] + Y[4] * A[14]
        Z[5] = Y[4] * C[14]
        U[0] = Z[0] * A[15]
        U[1] = Z[0] * C[15] + Z[1] * A[16]
        U[2] = Z[1] * C[16] + Z[2] * A[17]
        U[3] = Z[2] * C[17] + Z[3] * A[18]
        U[4] = Z[3] * C[18] + Z[4] * A[19]
        U[5] = Z[4] * C[19] + Z[5] * A[20]
        U[6] = Z[5] * C[20]
        O[0] = U[0] * A[21]
        O[1] = U[0] * C[21] + U[1] * A[22]
        O[2] = U[1] * C[22] + U[2] * A[23]
        O[3] = U[2] * C[23] + U[3] * A[24]
        O[4] = U[3] * C[24] + U[4] * A[25]
        O[5] = U[4] * C[25] + U[5] * A[26]
        O[6] = U[5] * C[26] + U[6] * A[27]
        O[7] = U[6] * C[27]
        V[0] = O[0] * A[28]
        V[1] = O[0] * C[28] + O[1] * A[29]
        V[2] = O[1] * C[29] + O[2] * A[30]
        V[3] = O[2] * C[30] + O[3] * A[31]
        V[4] = O[3] * C[31] + O[4] * A[32]
        V[5] = O[4] * C[32] + O[5] * A[33]
        V[6] = O[5] * C[33] + O[6] * A[34]
        V[7] = O[6] * C[34] + O[7] * A[35]
        V[8] = O[7] * C[35]
        D[0] = V[0] * 1000000

        while i < n + 1:
            D[i] = V[i] * 1000000 + D[i - 1]
            i = i + 1

        while l < k:
            f = random.randint(0, 1000000)
            if f < D[0] and f >= 0:
                E[0] = E[0] + 1

            elif f < D[1] and f >= D[0]:
                E[1] = E[1] + 1

            elif f < D[2] and f >= D[1]:
                E[2] = E[2] + 1

            elif f < D[3] and f >= D[2]:
                E[3] = E[3] + 1

            elif f < D[4] and f >= D[3]:
                E[4] = E[4] + 1

            elif f < D[5] and f >= D[4]:
                E[5] = E[5] + 1

            elif f < D[6] and f >= D[5]:
                E[6] = E[6] + 1

            elif f < D[7] and f >= D[6]:
                E[7] = E[7] + 1

            elif f <= D[8] and f >= D[7]:
                E[8] = E[8] + 1
            l = l + 1

        while p < n + 1:
            result.append(E[p])
            p = p + 1

    elif n == 9:
        while j < 45:
            A[j] = prob
            C[j] = 1 - A[j]
            j = j + 1

        B[0] = A[0] * A[1]
        B[1] = A[0] * C[1] + A[2] * C[0]
        B[2] = C[0] * C[2]
        X[0] = B[0] * A[3]
        X[1] = B[0] * C[3] + B[1] * A[4]
        X[2] = B[1] * C[4] + B[2] * A[5]
        X[3] = B[2] * C[5]
        Y[0] = X[0] * A[6]
        Y[1] = X[0] * C[6] + X[1] * A[7]
        Y[2] = X[1] * C[7] + X[2] * A[8]
        Y[3] = X[2] * C[8] + X[3] * A[9]
        Y[4] = X[3] * C[9]
        Z[0] = Y[0] * A[10]
        Z[1] = Y[0] * C[10] + Y[1] * A[11]
        Z[2] = Y[1] * C[11] + Y[2] * A[12]
        Z[3] = Y[2] * C[12] + Y[3] * A[13]
        Z[4] = Y[3] * C[13] + Y[4] * A[14]
        Z[5] = Y[4] * C[14]
        U[0] = Z[0] * A[15]
        U[1] = Z[0] * C[15] + Z[1] * A[16]
        U[2] = Z[1] * C[16] + Z[2] * A[17]
        U[3] = Z[2] * C[17] + Z[3] * A[18]
        U[4] = Z[3] * C[18] + Z[4] * A[19]
        U[5] = Z[4] * C[19] + Z[5] * A[20]
        U[6] = Z[5] * C[20]
        O[0] = U[0] * A[21]
        O[1] = U[0] * C[21] + U[1] * A[22]
        O[2] = U[1] * C[22] + U[2] * A[23]
        O[3] = U[2] * C[23] + U[3] * A[24]
        O[4] = U[3] * C[24] + U[4] * A[25]
        O[5] = U[4] * C[25] + U[5] * A[26]
        O[6] = U[5] * C[26] + U[6] * A[27]
        O[7] = U[6] * C[27]
        V[0] = O[0] * A[28]
        V[1] = O[0] * C[28] + O[1] * A[29]
        V[2] = O[1] * C[29] + O[2] * A[30]
        V[3] = O[2] * C[30] + O[3] * A[31]
        V[4] = O[3] * C[31] + O[4] * A[32]
        V[5] = O[4] * C[32] + O[5] * A[33]
        V[6] = O[5] * C[33] + O[6] * A[34]
        V[7] = O[6] * C[34] + O[7] * A[35]
        V[8] = O[7] * C[35]
        N[0] = V[0] * A[36]
        N[1] = V[0] * C[36] + V[1] * A[37]
        N[2] = V[1] * C[37] + V[2] * A[38]
        N[3] = V[2] * C[38] + V[3] * A[39]
        N[4] = V[3] * C[39] + V[4] * A[40]
        N[5] = V[4] * C[40] + V[5] * A[41]
        N[6] = V[5] * C[41] + V[6] * A[42]
        N[7] = V[6] * C[42] + V[7] * A[43]
        N[8] = V[7] * C[43] + V[8] * A[44]
        N[9] = V[8] * C[44]
        D[0] = N[0] * 1000000

        while i < n + 1:
            D[i] = N[i] * 1000000 + D[i - 1]
            i = i + 1

        while l < k:
            f = random.randint(0, 1000000)
            if f < D[0] and f >= 0:
                E[0] = E[0] + 1

            elif f < D[1] and f >= D[0]:
                E[1] = E[1] + 1

            elif f < D[2] and f >= D[1]:
                E[2] = E[2] + 1

            elif f < D[3] and f >= D[2]:
                E[3] = E[3] + 1

            elif f < D[4] and f >= D[3]:
                E[4] = E[4] + 1

            elif f < D[5] and f >= D[4]:
                E[5] = E[5] + 1

            elif f < D[6] and f >= D[5]:
                E[6] = E[6] + 1

            elif f < D[7] and f >= D[6]:
                E[7] = E[7] + 1

            elif f < D[8] and f >= D[7]:
                E[8] = E[8] + 1

            elif f <= D[9] and f >= D[8]:
                E[9] = E[9] + 1
            l = l + 1

        while p < n + 1:
            result.append(E[p])
            p = p + 1

    elif n == 10:
        while j < 55:
            A[j] = prob
            C[j] = 1 - A[j]
            j = j + 1

        B[0] = A[0] * A[1]
        B[1] = A[0] * C[1] + A[2] * C[0]
        B[2] = C[0] * C[2]
        X[0] = B[0] * A[3]
        X[1] = B[0] * C[3] + B[1] * A[4]
        X[2] = B[1] * C[4] + B[2] * A[5]
        X[3] = B[2] * C[5]
        Y[0] = X[0] * A[6]
        Y[1] = X[0] * C[6] + X[1] * A[7]
        Y[2] = X[1] * C[7] + X[2] * A[8]
        Y[3] = X[2] * C[8] + X[3] * A[9]
        Y[4] = X[3] * C[9]
        Z[0] = Y[0] * A[10]
        Z[1] = Y[0] * C[10] + Y[1] * A[11]
        Z[2] = Y[1] * C[11] + Y[2] * A[12]
        Z[3] = Y[2] * C[12] + Y[3] * A[13]
        Z[4] = Y[3] * C[13] + Y[4] * A[14]
        Z[5] = Y[4] * C[14]
        U[0] = Z[0] * A[15]
        U[1] = Z[0] * C[15] + Z[1] * A[16]
        U[2] = Z[1] * C[16] + Z[2] * A[17]
        U[3] = Z[2] * C[17] + Z[3] * A[18]
        U[4] = Z[3] * C[18] + Z[4] * A[19]
        U[5] = Z[4] * C[19] + Z[5] * A[20]
        U[6] = Z[5] * C[20]
        O[0] = U[0] * A[21]
        O[1] = U[0] * C[21] + U[1] * A[22]
        O[2] = U[1] * C[22] + U[2] * A[23]
        O[3] = U[2] * C[23] + U[3] * A[24]
        O[4] = U[3] * C[24] + U[4] * A[25]
        O[5] = U[4] * C[25] + U[5] * A[26]
        O[6] = U[5] * C[26] + U[6] * A[27]
        O[7] = U[6] * C[27]
        V[0] = O[0] * A[28]
        V[1] = O[0] * C[28] + O[1] * A[29]
        V[2] = O[1] * C[29] + O[2] * A[30]
        V[3] = O[2] * C[30] + O[3] * A[31]
        V[4] = O[3] * C[31] + O[4] * A[32]
        V[5] = O[4] * C[32] + O[5] * A[33]
        V[6] = O[5] * C[33] + O[6] * A[34]
        V[7] = O[6] * C[34] + O[7] * A[35]
        V[8] = O[7] * C[35]
        N[0] = V[0] * A[36]
        N[1] = V[0] * C[36] + V[1] * A[37]
        N[2] = V[1] * C[37] + V[2] * A[38]
        N[3] = V[2] * C[38] + V[3] * A[39]
        N[4] = V[3] * C[39] + V[4] * A[40]
        N[5] = V[4] * C[40] + V[5] * A[41]
        N[6] = V[5] * C[41] + V[6] * A[42]
        N[7] = V[6] * C[42] + V[7] * A[43]
        N[8] = V[7] * C[43] + V[8] * A[44]
        N[9] = V[8] * C[44]
        M[0] = N[0] * A[45]
        M[1] = N[0] * C[45] + N[1] * A[46]
        M[2] = N[1] * C[46] + N[2] * A[47]
        M[3] = N[2] * C[47] + N[3] * A[48]
        M[4] = N[3] * C[48] + N[4] * A[49]
        M[5] = N[4] * C[49] + N[5] * A[50]
        M[6] = N[5] * C[50] + N[6] * A[51]
        M[7] = N[6] * C[51] + N[7] * A[52]
        M[8] = N[7] * C[52] + N[8] * A[53]
        M[9] = N[8] * C[53] + N[9] * A[54]
        M[10] = N[9] * C[54]
        D[0] = M[0] * 1000000

        while i < n + 1:
            D[i] = M[i] * 1000000 + D[i - 1]
            i = i + 1

        while l < k:
            f = random.randint(0, 1000000)
            if f < D[0] and f >= 0:
                E[0] = E[0] + 1

            elif f < D[1] and f >= D[0]:
                E[1] = E[1] + 1

            elif f < D[2] and f >= D[1]:
                E[2] = E[2] + 1

            elif f < D[3] and f >= D[2]:
                E[3] = E[3] + 1

            elif f < D[4] and f >= D[3]:
                E[4] = E[4] + 1

            elif f < D[5] and f >= D[4]:
                E[5] = E[5] + 1

            elif f < D[6] and f >= D[5]:
                E[6] = E[6] + 1

            elif f < D[7] and f >= D[6]:
                E[7] = E[7] + 1

            elif f < D[8] and f >= D[7]:
                E[8] = E[8] + 1

            elif f < D[9] and f >= D[8]:
                E[9] = E[9] + 1

            elif f <= D[10] and f >= D[9]:
                E[10] = E[10] + 1
            l = l + 1
        while p < n + 1:
            result.append(E[p])
            p = p + 1
    return result
